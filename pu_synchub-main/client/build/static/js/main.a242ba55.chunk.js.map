{"version":3,"sources":["components/LoginPage.js","components/DashboardPage.js","components/RegistrationPage.js","index.js"],"names":["LoginPage","userType","setUserType","useState","email","setEmail","name","setName","password","setPassword","phoneNumber","setPhoneNumber","navigate","useNavigate","React","createElement","value","onChange","e","target","Fragment","type","required","onClick","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","console","log","ok","Error","localStorage","setItem","replace","data","catch","error","DashboardPage","projectName","setProjectName","setdata","class","handlehome","handlelogin","handleSearch","contentType","get","includes","json","TypeError","matchingProjects","message","map","item","index","className","description","RegistrationPage","step","setStep","leaderEmail","setLeaderEmail","mem2Email","setMem2Email","mem3Email","setMem3Email","mem4Email","setMem4Email","mentorEmail","setMentorEmail","projectDescription","setProjectDescription","max","handleStep1Submit","handleStep2Submit","ReactDOM","createRoot","document","getElementById","render","BrowserRouter","Routes","Route","path","element"],"mappings":"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","file":"static/js/main.a242ba55.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction LoginPage() {\r\n  const [userType, setUserType] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [phoneNumber, setPhoneNumber] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = (e) => {\r\n    fetch(\"/create\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        userType,\r\n        email,\r\n        name,\r\n        password,\r\n        phoneNumber\r\n      }),\r\n    })\r\n    .then(response => {\r\n      console.log(response)\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      localStorage.setItem('isLoggedIn', 'true');\r\n      navigate(\"/\", {\r\n        replace:true});\r\n    })\r\n    .then(data => {\r\n      console.log(data);\r\n      setUserType('');\r\n      setEmail('');\r\n      setName('');\r\n      setPassword('');\r\n      setPhoneNumber('');\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login</h2>\r\n      <div>\r\n        <label>User Type:</label>\r\n        <select value={userType} onChange={(e) => setUserType(e.target.value)}>\r\n          <option value=\"\">Select...</option>\r\n          <option value=\"student\">Student</option>\r\n          <option value=\"teacher\">Teacher</option>\r\n        </select>\r\n      </div>\r\n      {userType === 'student' && (\r\n        <>\r\n          <div>\r\n            <label>Email:</label>\r\n            <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Name:</label>\r\n            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Password:</label>\r\n            <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Phone Number:</label>\r\n            <input type=\"tel\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} required />\r\n          </div>\r\n        </>\r\n      )}\r\n      {userType === 'teacher' && (\r\n        <>\r\n          <div>\r\n            <label>Email:</label>\r\n            <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Password:</label>\r\n            <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Name:</label>\r\n            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n          </div>\r\n        </>\r\n      )}\r\n      {userType && (\r\n        <div>\r\n          <button onClick={handleLogin}>Login</button>\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;","import React, { useState } from 'react';\r\nimport \"./DashboardPage.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction DashboardPage() {\r\n    const [projectName, setProjectName] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const [data,setdata] = useState(null)\r\n    const handlehome = () => {\r\n      navigate(\"/\", {\r\n        replace:true});\r\n    }\r\n    const handlelogin = () => {\r\n      navigate(\"/login\", {\r\n        replace:true});\r\n    }\r\n    const handleSearch = () => {\r\n        fetch(\"/search\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          body: JSON.stringify({\r\n            projectName\r\n          })\r\n        })\r\n        .then(response => {\r\n          if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n          }\r\n          const contentType = response.headers.get(\"content-type\");\r\n          if (contentType && contentType.includes(\"application/json\")) {\r\n            return response.json();\r\n          } else {\r\n            throw new TypeError(\"Response is not in JSON format\");\r\n          }\r\n        })\r\n        .then(data => {\r\n            console.log(data.matchingProjects);\r\n            setdata(data.matchingProjects);\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error: \", error.message);\r\n        });\r\n      };\r\n    return (\r\n      <>\r\n      <div class=\"head\">\r\n        <div class=\"left-h\">\r\n          <p class=\"p1\">LOGO</p>\r\n          <p class=\"p2\">PU SYNCHUB</p>\r\n        </div>\r\n        <div class=\"right-h\">\r\n          <button class=\"b1\" onClick={handlehome}>Home</button>\r\n          <button class=\"b2\" onClick={handlelogin}>Login</button>\r\n          <button class=\"b3\">Registration</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"Content\">\r\n        <div>\r\n          <label>Project Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={projectName}\r\n            onChange={(e) => setProjectName(e.target.value)}\r\n          />\r\n        </div>\r\n        <button onClick={handleSearch}>Search</button>\r\n        <div>\r\n          <h2>Matching Responses:</h2>\r\n          {(data != null) ?\r\n            <div>\r\n              {\r\n                data.map((item, index) => (\r\n                  <div className=\"re\">\r\n                    {item.name}{item.description}\r\n                  </div>\r\n                ))\r\n              }\r\n            </div> : <div></div>\r\n          }\r\n        </div>\r\n      </div>\r\n      </>\r\n  );\r\n}\r\n\r\nexport default DashboardPage;","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction RegistrationPage() {\r\n  const [step, setStep] = useState(1);\r\n  const [leaderEmail, setLeaderEmail] = useState('');\r\n  const [mem2Email, setMem2Email] = useState('');\r\n  const [mem3Email, setMem3Email] = useState('');\r\n  const [mem4Email, setMem4Email] = useState('');\r\n  const [mentorEmail, setMentorEmail] = useState('');\r\n  const [projectName, setProjectName] = useState('');\r\n  const [projectDescription, setProjectDescription] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleStep1Submit = () => {\r\n\r\n    fetch(\"/register_team\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        leaderEmail,\r\n        mem2Email,\r\n        mem3Email,\r\n        mem4Email,\r\n        mentorEmail\r\n      }),\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      setStep(2); // Move to step 2\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n    });\r\n  };\r\n\r\n  const handleStep2Submit = () => {\r\n    // Perform validation if needed\r\n    // For simplicity, we assume project name and description are filled\r\n    // Send data to server and proceed if successful\r\n    fetch(\"/register_project\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        projectName,\r\n        projectDescription\r\n      }),\r\n    })\r\n    .then(response => {\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      navigate(\"/dashboard\", { replace: true }); // Navigate to dashboard on successful registration\r\n    })\r\n    .catch(error => {\r\n      console.error('Error:', error);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Registration</h2>\r\n      <div>\r\n        <p>Step {step} of 2</p>\r\n        <progress max=\"2\" value={step}></progress>\r\n      </div>\r\n      {step === 1 && (\r\n        <>\r\n          <h3>Step 1: Team Information</h3>\r\n          <div>\r\n            <label>Leader Email:</label>\r\n            <input type=\"email\" value={leaderEmail} onChange={(e) => setLeaderEmail(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Member 2 Email:</label>\r\n            <input type=\"email\" value={mem2Email} onChange={(e) => setMem2Email(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Member 3 Email:</label>\r\n            <input type=\"email\" value={mem3Email} onChange={(e) => setMem3Email(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Member 4 Email:</label>\r\n            <input type=\"email\" value={mem4Email} onChange={(e) => setMem4Email(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Mentor Email:</label>\r\n            <input type=\"email\" value={mentorEmail} onChange={(e) => setMentorEmail(e.target.value)} required />\r\n          </div>\r\n          <button onClick={handleStep1Submit}>Next</button>\r\n        </>\r\n      )}\r\n      {step === 2 && (\r\n        <>\r\n          <h3>Step 2: Project Information</h3>\r\n          <div>\r\n            <label>Project Name:</label>\r\n            <input type=\"text\" value={projectName} onChange={(e) => setProjectName(e.target.value)} required />\r\n          </div>\r\n          <div>\r\n            <label>Project Description:</label>\r\n            <textarea value={projectDescription} onChange={(e) => setProjectDescription(e.target.value)} required />\r\n          </div>\r\n          <button onClick={handleStep2Submit}>Register</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegistrationPage;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport './index.css';\nimport LoginPage from './components/LoginPage';\nimport DashboardPage from './components/DashboardPage';\nimport RegistrationPage from './components/RegistrationPage';\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/login\" element={<LoginPage />} />\n      <Route path=\"/registration\" element={<RegistrationPage />} />\n      <Route path=\"/\" element={<DashboardPage/>} />\n    </Routes>\n  </BrowserRouter>\n);\n"],"sourceRoot":""}